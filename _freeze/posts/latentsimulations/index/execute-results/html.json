{
  "hash": "f08235e87a09f89c604e811c3de283c8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Some latent variable simulations\"\nformat: html\nself-contained: true\nauthor: \n - name: Thomas Sostarics\n - url: https://tsostarics.com/\n - affiliation: Northwestern University Department of Linguistics\n - orcid: 0000-0002-1178-7967\ndate: '2024-07-22'\ncitation:\n  url: https://tsostaricsblog.netlify.app/posts/latentsimulations\neditor: source\ndescription: \"This post looks at the relationship between continuous predictors, latent variables, and predicted ordinal ratings.\"\ntoc: true\ncategories: ['R']\ncode-tools: true\ncode-fold: show\nknitr: \n  opts_chunk: \n    message: false\n    warning: false\n---\n\n\nI found myself second guessing myself about the relationship between\nthresholds, a predictor variable $x$, and a latent variable $Y*$ in cumulative \nlink models.\nSo, I ran some simulations to double check that thresholds partition values of\n$Y*$, but this doesn't translate to partitioning values of $x$.\nA lot of the things here are stated formally already in McCullagh's 1980 paper\nand Agresti's 2010 textbook, so the simulations are just to convince myself.\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ordinal)\nlibrary(tidyverse)\n\nplot_theme <-\n  list(\n    scale_color_brewer(palette = \"Dark2\"),\n    theme_bw(base_size = 16),\n    theme(panel.grid = element_line(linewidth = .3))\n  )\n```\n:::\n\n\nHelpers to work with threshold values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get probabilities for k ratings given k-1 threshold values\nget_rating_probabilities <- function(thetas) {\n  c(plogis(thetas[1]), diff(c(plogis(thetas), 1)))\n  \n}\n\n# Multinomial sampling given threshold allocations\nsample_ratings <- function(x, thresholds, size = 50, B = 1.25) {\n  probs <- get_rating_probabilities(thresholds - B*x)\n  rmultinom(1, size, probs)[,1]\n}\n```\n:::\n\n\nSet up some hyperparameters for the simulations, we'll use a single continuous variable `x`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nxvals <- seq(-4,4, by = .01)\nthetas <- c(-1.5,0,.9)\nn_points <- 400\n```\n:::\n\n\n## The simulations\n\nBelow we simulate a bunch of ratings at each value of `x`, then wrangle that\ninto a long dataframe of rating observations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(111)\n\n# Simulate n_points observations at each value of x\nraw_data <-\n  data.frame(\n    x = rep(xvals, each = 4),\n    rating = ordered(rep(1:4, times = length(xvals))),\n    response_count = \n      c(\n        lapply(xvals, \\(x) sample_ratings(x, thetas, size = n_points)), \n        recursive = TRUE\n      )\n  )\n\n# Convert counts to individual observations\nresponse_data <- \n  raw_data |>\n  reframe(.by = c('x', 'rating', 'response_count'),\n          response = seq_len(response_count[1]))\n```\n:::\n\n\nBelow we can see what the proportion of ratings are for each value of `x`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nraw_data |> \n  mutate(prop = response_count / n_points) |>\n  ggplot(aes(x = x, y = prop, color = rating)) +\n  geom_line() +\n  plot_theme\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nLet's model this using a simple clm.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsimulated_mdl <- clm(rating ~ x, data = response_data)\n```\n:::\n\n\nWe can extract the predictions for each value of `x`.\nThere are different predictions we can get:\n\n- The predicted probability of each rating given `x`\n- The predicted rating given `x`\n- The predicted cumulative probabilities up to each rating category given `x`\n- The log odds of the cumulative probabilities up to each rating category\ngiven `x` (i.e., the linear combination of predictors given the thresholds,\ncoefficient estimates, and `x`)\n\nI'm only going to focus on the first three, as the linear predictors are\ndirectly related to the cumulative probabilities via the link function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprob_preds <-\n  cbind(x = xvals, \n        predict(simulated_mdl, data.frame(x = xvals), type = \"prob\")$fit)\nrating_preds <-\n  cbind(x = xvals, \n        predict(simulated_mdl, data.frame(x = xvals), type = \"class\")$fit) |>\n  as.data.frame()\ncumprob_preds <-\n  cbind(x = xvals, \n        predict(simulated_mdl, data.frame(x = xvals), type = \"cum.prob\")$cprob1)\n```\n:::\n\n\nWrangle the more complicated ones into dataframes:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprobs_df <-\n  prob_preds |>\n  as.data.frame() |>\n  pivot_longer(cols = 2:5,\n               names_to = \"rating\",\n               values_to = \"prob\")\n\ncumprob_df <-\n  cumprob_preds |>\n  as.data.frame() |>\n  pivot_longer(cols = 2:5,\n               names_to = \"rating\",\n               values_to = \"prob\")\n```\n:::\n\n\n### Simulation results\n\nWe can plot the predicted probabilities of each rating along with what the\npredicted rating is for each value of `x`.\nNote that the predicted rating $Y$ is going to be the rating that has the \nhighest probability.\nHere are the predictions; the discrete rating is shown by a black line.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprobs_df |>\n  ggplot(aes(x = x, y = prob, group = rating, color = rating)) +\n  geom_line() +\n  geom_line(data = rating_preds,\n            aes(x = x, y = as.numeric(V2)/4),\n            color = \"black\",\n            inherit.aes = FALSE)+\n  plot_theme\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nHere are the predictions superimposed on top of our empirical proportions;\ngood fit! (we'd be in trouble if it wasn't)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nraw_data |> \n  mutate(prop = response_count / n_points) |>\n  ggplot(aes(x = x, y = prop, color = rating, group = rating)) +\n  geom_line(alpha = .5) +\n  geom_line(data = probs_df,\n            aes(y = prob),\n            color = 'white',\n            linewidth = 2)+\n  geom_line(data = probs_df,\n            aes(y = prob),\n            linewidth = 1)+\n  geom_line(data = rating_preds,\n            aes(x = x, y = as.numeric(V2)/4),\n            color = \"black\",\n            inherit.aes = FALSE)+\n  plot_theme\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nNote that the points at which the observed rating changes (where the black\nline goes up) is not equal to the threshold values:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_thetas <- function(scale = FALSE, \n                        color = 'red', \n                        linetype = 'dashed', \n                        model = simulated_mdl) {\n  thetas <- model$Theta\n  \n  if (scale)\n    thetas <- thetas / model$coefficients['x']\n  \n  lapply(\n    thetas, \n    \\(t) geom_vline(xintercept = t, color = color, linetype = linetype)\n  )\n}\n\nprobs_df |>\n  ggplot(aes(x = x, y = prob, group = rating, color = rating)) +\n  geom_line() +\n  geom_line(data = rating_preds,\n            aes(x = x, y = as.numeric(V2)/4),\n            color = \"black\",\n            inherit.aes = FALSE)+\n  plot_thetas() +\n  plot_theme\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nRather, the thresholds are related to where the cumulative probabilities up to\na given rating category is 50\\%.\nWe can work this out analytically.\nAssuming a logit link function, 50\\% corresponds to a logit of 0.\n\n\\begin{align*}\n\\text{logit}[P(y\\leq j)]&=\\theta_j - \\beta*x \\\\\n0 &= \\theta_j - \\beta*x \\\\\nx &= \\frac{\\theta_j}{\\beta}\n\\end{align*}\n\nAgain, this is not the value of `x` at which a specific rating is predicted,\nbut the value of `x` at which the cumulative probability given a particular\nrating category $j$ is equal to 50\\%.\nBelow, the threshold values are plotted in gray dotted lines and the transformed\nvalues for finding where the cumulative probabilities are equal to 50\\% are\nplotted in red.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncumprob_df |>\n  ggplot(aes(x = x, y = prob, group = rating, color = rating)) +\n  geom_line() +\n  plot_thetas(scale=FALSE, \"gray20\", \"dotted\") +\n  plot_thetas(scale=TRUE) +\n  geom_line(data = rating_preds,\n            aes(x = x, y = as.numeric(V2)/4),\n            color = \"black\",\n            inherit.aes = FALSE) +\n  plot_theme +\n  ylab(\"P(Y<=j)\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nTaking the first curve as an example, we can say that at (just past) the first\ntransformed threshold, the probability of a 1 is less than the probability of a rating\nhigher than 1 (=2,3,4).\nBut, the individual probability of a 1 can be higher than the individual\nprobabilities of a 2, 3, or 4 response.\nSomewhat relatedly, for the third curve at the third transformed threshold, we can see that\nthe probability of a 1, 2, or 3 response becomes less likely than a 4 response.\nBut by the time we subtract out the likelihood of a 1 or 2, then the likelihood\nof a 1, we find that the individual probability of a 3 is never higher than\nthe individual probabilities of a 1, 2, or 4 rating.\nHence, we never predict a rating of 3 for any value of `x`.\n\nWhere did all our 3s go??\nBecause $Y=3$ is never the *most likely* rating, it isn't predicted given values\nof `x`.\nIf we're supposed to get a value of 3 whenever a value of $Y*$ falls between\n$\\theta_{2|3}$ and $\\theta_{3|4}$, then how is `x` related to $Y*$?\nHere, `x` affects the distribution of $Y*$ values via shifting its location.\nIn other words, $Y*$ is taken to vary about a location $\\eta$, which in the\ncontext of our model depends on `x` via  $\\beta x$, i.e., $\\eta(x)=\\beta x$.\n\nHow is $Y*$ distributed?\nGiven our link function, it'll be a logistic distribution.\nSo, we can sample values of $Y*$ from a logistic distribution at different\nvalues of $x$, then use our thresholds to categorize the sampled values of $Y*$\nand obtain ratings $Y$.\nBy doing so, we can reintroduce some 3s, which we know should be possible in a\nprobabilistic sense.\nIn the process, we'll also simulate a new dataset that should match our previous\npredicted probabilities (and in turn our empirical proportions).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Helper to categorize values of Y* to get ratings Y\nystar_to_y <- function(ystar, thresholds = simulated_mdl$Theta[1,]) {\n  indices <- seq_along(thresholds)\n  max_val <- length(thresholds)+1L\n  vapply(ystar, \\(y) {\n    for (i in indices) {\n      if (y < thresholds[i])\n        return (i)\n    }\n    max_val\n  }, 1L)\n}\n\n# Sample Y* values at values of x given the model's estimated coefficient\nsample_ystar <- function(x, n_ratings = n_points, model = simulated_mdl){\n  b <- model$coefficients['x']\n  \n  rlogis(n_ratings, location = b*x) # Not negated here\n}\n\n# Helper to sample multiple ratings for a given value of x\nsample_rating_from_model <- function(x, n_ratings = n_points, model = simulated_mdl){\n  ystar_values <- sample_ystar(x, n_ratings, model)\n  \n  ystar_to_y(ystar_values)\n}\n\n# Sample Y* values and plot\nset.seed(111)\nsample_data <- \n  data.frame(x = rep(xvals, each = n_points),\n             rating = c(lapply(xvals,sample_rating_from_model),recursive=TRUE))\n\nsample_data |> \n  mutate(rating = ordered(rating)) |> \n  group_by(x, rating) |> \n  summarize(response_count = n(),\n            prob = response_count / n_points) |> \n  ggplot(aes(x = x, y = prob, color = rating, group = rating)) +\n  geom_line() +\n  plot_theme\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nCompare this to the empirical data we plotted at the beginning.\nIt looks the same!\nWe sampled values in 2 different ways: once through multinomial sampling of\ndiscrete values of $Y$ given fixed response probabilities (derived from fixed\nthresholds) and values of x, and once through sampling continuous values of $Y*$\nfrom a logistic distribution then categorizing the sampled results to get\ndiscrete ratings (following a latent variable motivation for the CLM).\n\nWe can also look at the distribution of $Y*$ values at a few values of `x`.\nPlotted are the probability density curves scaled to the number of sampled\npoints and a histogram of $Y*$ values with the thresholds shown in red.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(111)\ntest_x_vals <- c(-3, -.5, 1, 2.5)\nystar_dist_df <- \n  data.frame(x = rep(test_x_vals, each = n_points),\n             ystar = c(lapply(test_x_vals,sample_ystar),recursive=TRUE))\n\nbeta <- simulated_mdl$coefficients['x']\nlocations <- summarize(ystar_dist_df,\n          .by = 'x') |> \n  mutate(beta_x = beta * x)\n\nystar_dist_df |> \n  ggplot(aes(x = ystar)) +\n  geom_histogram() +\n  plot_thetas(FALSE) +\n  lapply(test_x_vals, \n         \\(l) \n         geom_line(data=data.frame(xvals = seq(-10,10,.1),\n                              x = l,\n                              y = dlogis(seq(-10,10,.1),location = beta*l)*n_points),\n                   aes(x = xvals, y = y, group = x)))+\n  facet_grid(x~.) +\n  plot_theme\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n## Conclusions\n\nHere are the take homes based on the simulations.\nFirst, the thresholds $\\theta_j$ shows how the values of $Y*$ are\ncategorized into discrete rating categories $Y$.\nIn other words, the distribution of $Y*$ is partitioned by the thresholds.\nHowever, the $Y*$ values are distributed about a location parameter that depends\non `x`, for our simple model this is just $\\beta x$.\nThe threshold values can be scaled by $\\beta$ to identify the values of `x` at\nwhich different cumulative probabilities are equal to 50\\%.\nBut these values do not necessarily correspond to the points at which the\npredicted ratings $Y$ change.\nThis is because the individual probability of one response category may be less\nlikely than the *sum* of the individual probabilities of each higher rating\nwhile still being the most likely *individual* response category.\nWe can nonetheless recover the estimated proportions of each rating category\nby sampling from the link function's distribution conditioned on a value of `x`.\n\nSo, values of $Y*$ increase in categorized value $Y$ when \nsurpassing a threshold.\nIf we use a continuous predictor, then we should be able to identify a region\nat which we pass from one rating to another.\nBut, we noted that there was no region at which we got 3s.\nThis arises because `x` is related to the distribution of $Y*$ values, but the\npredicted value $Y$ depends on considering the allocation of probability given\nall of the thresholds and choosing the value with the highest probability, which\nis not guaranteed to be an infrequent response category.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}